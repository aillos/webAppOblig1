@model IEnumerable<WildStays.Models.Reservation>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js'></script>
<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/main.css' />
<link rel="stylesheet" href="./css/site.css">
<style>
    
    /*Setting margin and padding for body to 0 to avoid whiteline at the bottom and unnsessecary scrolling.*/
    body{
    margin:0px;
    padding:0px;
}
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchButton = document.getElementById("searchButton");
        const textInput = document.getElementById("search");
        
        //Retrieving events from reservations (model).
        var allEvents = @Html.Raw(Json.Serialize(Model.Select(item => new {
            title = "Listing: " + item.ListingId,
            start = item.StartDate.ToString("yyyy-MM-dd"),
            end = item.EndDate.AddDays(1).ToString("yyyy-MM-dd"),
            display = "background",
            color = "red",
            place = item.Place
            })));

        //Settings for calendar, both layout and whether it should be possible to click on. And that the time of day should not be shown.
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            fixedWeekCount: false,
            timeFormat: 'H(:mm)',
            displayEventTime: false,
            selectable: true, 
            unselect: function () {
                var datesDiv = document.getElementById('dates');
                datesDiv.innerHTML = '';
            },

            //Setting calendar events to the backround color red, so user knows they are booked and may contain fewer options on search
            select: function (info) {
                var eventsDuringSelection = calendar.getEvents().filter(event => {
                    var eventStart = new Date(event.start);
                    var eventEnd = new Date(event.end);
                    return eventStart < info.end && eventEnd > info.start && event.backgroundColor === 'red';
                });
                
                //If you select a date, updates the values and updates the date section under calendar
                document.getElementById('startDateInput').value = info.startStr;
                document.getElementById('endDateInput').value = info.endStr;
                var datesDiv = document.getElementById('dates');
                datesDiv.innerHTML = `Selected dates: ${info.startStr} to ${info.endStr}`;
                
                if (eventsDuringSelection.length !== 0) {
                    //If you select a reserved date, then alert 
                    alert('Selection includes a reserved date!');
                }

            }
        });

        //Rendering the calendar
        calendar.render();

        //Function for checking if the search is being made.
        searchButton.addEventListener('click', () => {
            var searchTerm = textInput.value;

            //Removing all events before setting new ones, in case of a new search. There could be a check for if it's the same or not so that we could be more efficient, but that may be done for future versions. 
            calendar.removeAllEvents();

            //Adding new events based on search
            var filteredEvents = allEvents.filter(event => event.place === searchTerm);

            filteredEvents.forEach(event => {
                calendar.addEvent(event);
            });
        });

        textInput.addEventListener('change', function () {
            document.getElementById('placeInput').value = this.value;
        });
    });
</script>

@{
    ViewData["Title"] = "Home Page";
}

<div class="backgroundHome">
    <div class="background2">
        @*Place input where user puts in Place in order to filter out from liostings and reservations*@
        <div class="searchBar">
            <select id="search" name="Search">
                <option value="">Select a Place</option>
                <option value="Oslo">Oslo</option>
                <option value="Bergen">Bergen</option>
                <option value="Trondheim">Trondheim</option>
            </select>
            @*Performing search and updating calendar based on place input.*@
            <button id="searchButton">Search</button><br/>
        </div>
        @*Info container for use of calendar*@
        <div class="calendarInfo">The <strong style="color:red;">redder</strong> the date, the more listings are <strong>booked.</strong> <br /><strong>Click</strong> and <strong>drag</strong> to select dates to filter by.</div>
    </div>
    
    @*Placement of calendar on the site. Calendar is created with javascript as shown above.*@
    <div class="dateDiv">
        
        <div id="calendar"></div>
    </div>
    
    @*Box or container to show which dates are being chosen by the user. Container is being updated as the search is made. See listener in script for more info.*@
    
    <div id="dates"></div>
    @* Redirection to reservations page with variables sett based on Place value and Start/End date.*@
    <form action="/Reservations" method="get">
        <input type="hidden" id="placeInput" name="Place" value="">
        <input type="hidden" id="startDateInput" name="StartDate" value="">
        <input type="hidden" id="endDateInput" name="EndDate" value="">

        <button type="submit" class="buttonStyle">See results</button>
    </form>
    
    @*Image container, gives white space for the images below and above.*@
    <div class="bilder">
        @*Container for image slides, works as a slideshow, image for slideshow is only css, no javascript.
        Each image is selected from the folder images. If you wish more images, you need to update the css to move correct amount on click.
        For more info see #slider-span1:targer ~ .image-slider in css.*@
        <div class="slide-container">
            <span class="slider-span" id="slider-span1"></span>
            <span class="slider-span" id="slider-span2"></span>
            <span class="slider-span" id="slider-span3"></span>
            <span class="slider-span" id="slider-span4"></span>
            <span class="slider-span" id="slider-span5"></span>

            <div class="image-slider">
                <div class="slides-div" id="slide-1">
                    <img src="images/akerLeilighet.jpg" alt="" class="img" id="img1">
                    <a href="#slider-span1" class="button" id="button-1"></a>
                </div>
                <div class="slides-div" id="slide-2">
                    <img src="images/osloLeilighet.jpg" alt="" class="img" id="img2">
                    <a href="#slider-span2" class="button" id="button-2"></a>
                </div>
                <div class="slides-div" id="slide-3">
                    <img src="images/lÃ¸renskogLeilighet.jpg" alt="" class="img" id="img3">
                    <a href="#slider-span3" class="button" id="button-3"></a>
                </div>
                <div class="slides-div" id="slide-4">
                    <img src="images/stavangerLeilighet.jpg" alt="" class="img" id="img4">
                    <a href="#slider-span4" class="button" id="button-4"></a>
                </div>
                <div class="slides-div" id="slide-5">
                    <img src="images/trondheimLeilighet.jpg" alt="" class="img" id="img5">
                    <a href="#slider-span5" class="button" id="button-5"></a>
                </div>
            </div>

        </div>
    </div>
    <br />
    <br />
</div>
